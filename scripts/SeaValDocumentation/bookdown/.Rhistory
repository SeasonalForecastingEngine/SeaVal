# merge predictions and observations into the same data table:
setnames(dt_pred,'prec','prediction')
setnames(dt_obs,'prec','observation')
dt = merge(dt_pred,dt_obs,by = c('lon','lat','time','season'))
print(dt)
# remove all rows with missing predictions:
dt = dt[!is.na(prediction)]
dt
# convert time from the 'months since date' (MSD) format to years and months (YM)
dt = MSD_to_YM(dt,origin = '1981-01-01') # the origin was documented in the netcdf, see above.
print(dt)
print(dt)
# check out local biases
bias_dt = dt[,.(bias = mean(prediction - prec)), by = .(lon,lat,season)] # grouping by lon,lat, and season means that the mean is taken over all years.
# check out local biases
bias_dt = dt[,.(bias = mean(prediction - observation)), by = .(lon,lat,season)] # grouping by lon,lat, and season means that the mean is taken over all years.
bias_dt
pp1 = ggplot_dt(bias_dt[season == 'FMA'], midpoint = 0)
dt = bias_dt[season == 'FMA']
pp1 = ggplot_dt(bias_dt[season == 'FMA'],
data_col = 'bias',
midpoint = 0)
pp1
pp2 = ggplot_dt(bias_dt[season == 'MAM'],
data_col = 'bias',
midpoint = 0)
pp2
dt_obs
dt_obs[!is.na(observation)]
dt_obs1
dt_obs2
dt_obs1
dt_obs2
setnames(dt_obs1,'prec','prec1')
setnames(dt_obs2,'prec','prec2')
test = merge(dt_obs1[,1:4],dt_obs2[,1:4])
test
test = test[!is.na(prec1)]
test
fn_pred2 = "CrossValidatedPredictedRain_Mar-May_Feb2021.nc"
dt_pred2 = netcdf_to_dt(paste0(data_dir,fn_pred1))
fn_pred1 = "CrossValidatedPredictedRain_Feb-Apr_Feb2021.nc"
fn_pred2 = "CrossValidatedPredictedRain_Mar-May_Feb2021.nc"
dt_pred1 = netcdf_to_dt(paste0(data_dir,fn_pred1),verbose = 0) # they look the same, we can just look at the information from one of them...
dt_pred2 = netcdf_to_dt(paste0(data_dir,fn_pred1))
dt_pred1
setnames(dt_pred1,'prec','prec1')
setnames(dt_pred2,'prec','prec2')
test2 = merge(dt_pred1,dt_pred2,by = c('lon','lat','time'))
test2
test2 = test2[!is.na(prec1)]
test2
test1
fn_pred1 = "CrossValidatedPredictedRain_Feb-Apr_Feb2021.nc"
fn_pred2 = "CrossValidatedPredictedRain_Mar-May_Feb2021.nc"
dt_pred1 = netcdf_to_dt(paste0(data_dir,fn_pred1),verbose = 0) # they look the same, we can just look at the information from one of them...
dt_pred2 = netcdf_to_dt(paste0(data_dir,fn_pred2))
# add a column, identifying which is which:
dt_pred1[,season:= 'FMA']
dt_pred2[,season:= 'MAM']
dt_pred = rbindlist(list(dt_pred1,dt_pred2))
print(dt_pred)
# get observations:
fn_obs1 = "ObservedRain_Feb-Apr_Feb2021.nc"
fn_obs2 = "ObservedRain_Mar-May_Feb2021_update.nc"
dt_obs1 = netcdf_to_dt(paste0(data_dir,fn_obs1),verbose = 0)
dt_obs2 = netcdf_to_dt(paste0(data_dir,fn_obs2),verbose = 1)
dt_obs1[,season := 'FMA']
dt_obs2[,season := 'MAM']
dt_obs = rbindlist(list(dt_obs1,dt_obs2))
# merge predictions and observations into the same data table:
setnames(dt_pred,'prec','prediction')
setnames(dt_obs,'prec','observation')
dt = merge(dt_pred,dt_obs,by = c('lon','lat','time','season'))
print(dt)
# remove all rows with missing predictions:
dt = dt[!is.na(prediction)]
# convert time from the 'months since date' (MSD) format to years and months (YM)
dt = MSD_to_YM(dt,origin = '1981-01-01') # the origin was documented in the netcdf, see above.
print(dt)
# check out local biases
bias_dt = dt[,.(bias = mean(prediction - observation)), by = .(lon,lat,season)] # grouping by lon,lat, and season means that the mean is taken over all years.
bias_dt
bias_dt[,range(bias)]
pp2 = ggplot_dt(bias_dt[season == 'MAM'],
data_col = 'bias',
rr = c(-15,15),
mn = 'bias of FMA prediction',
midpoint = 0)
# show plots:
ggarrange(pp1,pp2,ncol = 2)
pp1 = ggplot_dt(bias_dt[season == 'FMA'],
data_col = 'bias',
rr = c(-15,15), # fix range to make it comparable to pp2
mn = 'bias of FMA prediction',
midpoint = 0)
pp2 = ggplot_dt(bias_dt[season == 'MAM'],
data_col = 'bias',
rr = c(-15,15),
mn = 'bias of MAM prediction',
midpoint = 0)
# show plots:
ggarrange(pp1,pp2,ncol = 2)
### analyze mean square error skill scores ###
msess = MSESS_dt(dt,
fc_col = 'prediction',
obs_col = 'observation',
by_cols = 'season') # the skill scores should be computed for each season separately
dt
fc_dt = dt
fc_col = 'prediction'
obs_col = 'observation'
obs_dt = NULL
by_cols = 'season'
along_cols = 'year'
if(!('year' %in% along_cols)) stop('skill scores are with respect to leave-one-year-out climatology, so your along_cns must contain "year".')
if(is.null(obs_dt))
{
obs_dt = unique(fc_dt[,.SD,.SDcols = intersect(c(obs_col,by_cols,along_cols),c('year','month','lon','lat',obs_col))])
# note that by_cols can contain e.g. different systems, all of which are compared to the same observation, therefore the intersect.
}
obs_by_cols = intersect(by_cols,names(obs_dt))
climatology_prediction = climatology_ens_forecast(obs_dt = obs_dt,
by_cols = obs_by_cols)
climatology_MSE = MSE_dt(fc_dt = climatology_prediction,
fc_col = obs_col,
obs_dt = obs_dt,
obs_col = obs_col,
by_cols = obs_by_cols)
climatology_prediction
### analyze mean square error skill scores ###
msess = MSESS_dt(dt,
fc_col = 'prediction',
obs_col = 'observation',
by_cols = c('lon','lat','season')) # the skill scores should be computed for each location and each season separately
by_cols = c('lon','lat','season')
if(!('year' %in% along_cols)) stop('skill scores are with respect to leave-one-year-out climatology, so your along_cns must contain "year".')
if(is.null(obs_dt))
{
obs_dt = unique(fc_dt[,.SD,.SDcols = intersect(c(obs_col,by_cols,along_cols),c('year','month','lon','lat',obs_col))])
# note that by_cols can contain e.g. different systems, all of which are compared to the same observation, therefore the intersect.
}
obs_by_cols = intersect(by_cols,names(obs_dt))
obs_by_cols
obs_dt
obs_dt = NULL
if(!('year' %in% along_cols)) stop('skill scores are with respect to leave-one-year-out climatology, so your along_cns must contain "year".')
if(is.null(obs_dt))
{
obs_dt = unique(fc_dt[,.SD,.SDcols = intersect(c(obs_col,by_cols,along_cols),c('year','month','lon','lat',obs_col))])
# note that by_cols can contain e.g. different systems, all of which are compared to the same observation, therefore the intersect.
}
obs_by_cols = intersect(by_cols,names(obs_dt))
obs_by_cols
source('~/pkg/SeaVal/R/confer_validation.R')
### analyze mean square error skill scores ###
msess = MSESS_dt(dt,
fc_col = 'prediction',
obs_col = 'observation',
by_cols = c('lon','lat','season')) # the skill scores should be computed for each location and each season separately
msess
msess
msess[,range(MSESS)]
pp1 = ggplot_dt(msess[season == FMA],
data_col = 'MSESS',
rr=rr,
mn = 'MSE skill score, FMA')
pp2 = ggplot_dt(msess[season == MAM],
data_col = 'MSESS',
rr=rr,
mn = 'MSE skill score, MAM')
pp1 = ggplot_dt(msess[season == 'FMA'],
data_col = 'MSESS',
rr=rr,
mn = 'MSE skill score, FMA')
pp2 = ggplot_dt(msess[season == 'MAM'],
data_col = 'MSESS',
rr=rr,
mn = 'MSE skill score, MAM')
rr = c(-0.35,0.35)
pp1 = ggplot_dt(msess[season == 'FMA'],
data_col = 'MSESS',
rr=rr,
mn = 'MSE skill score, FMA')
pp2 = ggplot_dt(msess[season == 'MAM'],
data_col = 'MSESS',
rr=rr,
mn = 'MSE skill score, MAM')
ggarrange(pp1,pp2)
fns
fn = 'Ens_Prec_1monLead_MAM_Prob_EnsRegrCPT-avg.nc'
dt = netcdf_to_dt(paste0(data_dir,fn))
dt = dt[!is.na(below) | !is.na(normal) | !is.na (above)]
dt
dt = netcdf_to_dt(paste0(data_dir,fn))
dt = dt[!is.na(below) | !is.na(normal) | !is.na (above)]
p1 = ggplot_dt(dt,data_col = 'below', midpoint = dt[,min(below,na.rm = TRUE)])
p2 = ggplot_dt(dt,data_col = 'normal', midpoint = dt[,min(normal,na.rm = TRUE)], high = 'darkgoldenrod') # see https://www.r-graph-gallery.com/ggplot2-color.html for an overview of color names.
p3 = ggplot_dt(dt,data_col = 'above', midpoint = dt[,min(above,na.rm = TRUE)], high = 'darkgreen') # see https://www.r-graph-gallery.com/ggplot2-color.html for an overview of color names.
ggarrange(p1,p2,p3,ncol = 3)
fns
fn = "Ens_ProbExceedance_Mar-May_Feb2021.nc"
dt = netcdf_to_dt(paste0(data_dir,fn))
dt
fn = "ObservedRain_Mar-May_Feb2021_update.nc"
dt_obs = netcdf_to_dt(paste0(data_dir,fn))
dt_obs = MSD_to_YM(dt_obs)
dt_obs
dt_obs
fns
fn = "PredictedProbabilityRain_Feb-Apr_Feb2021.nc"
dt = netcdf_to_dt(paste0(data_dir,fn))
fn = "PredictedProbabilityRain_Mar-May_Feb2021_new.nc"
dt = netcdf_to_dt(paste0(data_dir,fn))
dt[,normal := normal/100][,above := above/100][,below := below/100]
dt
fns
fn = 'TrefEnsRegr_monthly.nc'
dt = netcdf_to_dt(paste0(data_dir,fn))
dt
fn = 'TrefEnsRegr_monthly.nc'
dt = netcdf_to_dt(paste0(data_dir,fn))
# plot correlations of predictions for all five models at all lead_times:
# create list of plots:
plot_list = list()
for(leadtime in 1:3)
{
for(mod in 1:5)
{
plot_list = c(plot_list,list(ggplot_dt(dt[model == mod & lead == leadtime],
'corr',
rr = c(-1,1),
mn = paste0('model = ',mod,', lead time ',leadtime),
discrete_cs = TRUE,
binwidth = 0.2,
guide = guide_colorbar(title = NULL, barwidth = 75, direction = 'horizontal')))) # adjust the legend/colorbar.
}
}
#plot as grid:
do.call('ggarrange', c(plot_list,ncol = 5,nrow = 3,common.legend = TRUE,legend = 'bottom'))
fns
fn = fns[16]
dt = netcdf_to_dt(paste0(data_dir,fn))
dt
ggplot(dt,high = 'darkblue',midpoint = 0)
ggplot_dt(dt,high = 'darkblue',midpoint = 0)
fns
fn = fns[6]
dt = netcdf_to_dt(paste0(data_dir,fn))
dt
fn = fns[10]
dt = netcdf_to_dt(paste0(data_dir,fn))
dt
fn
fn = fns[11]
dt = netcdf_to_dt(paste0(data_dir,fn))
dt
q(save = 'no')
### This script renders the SeaVal documentation
# It essentially knits all .rmd files in this folder, starting with index.rmd and then following the naming order (so the file names should start with a number)
### adjust to your setup: ###
setwd('~/pkg/SeaVal/scripts/SeaValDocumentation/bookdown/')
data_dir = '/nr/project/stat/CONFER/Data/validation/example_data/202102/'
chirps_fn = "/nr/project/stat/CONFER/Data/CHIRPS_prec_upscaled.csv"
output_dir = '/nr/common/www/virtual/files.nr.no/htdocs/samba/CONFER/SeaVal/'
# this directory is shared at http://files.nr.no/samba/CONFER/SeaVal/
save(data_dir,chirps_fn,file = '_data_dir.RData') # just for loading it in the bookdown
bookdown::render_book('index.rmd',
'bookdown::gitbook',
new_session = T)
# We need to copy paste, the output_dir option of render_book does not work, see https://github.com/rstudio/bookdown/issues/804
file.copy(list.files('./_book/',full.names = TRUE), to = output_dir, recursive = TRUE)
today()
### This script renders the SeaVal documentation
# It essentially knits all .rmd files in this folder, starting with index.rmd and then following the naming order (so the file names should start with a number)
### adjust to your setup: ###
setwd('~/pkg/SeaVal/scripts/SeaValDocumentation/bookdown/')
data_dir = '/nr/project/stat/CONFER/Data/validation/example_data/202102/'
chirps_fn = "/nr/project/stat/CONFER/Data/CHIRPS_prec_upscaled.csv"
output_dir = '/nr/common/www/virtual/files.nr.no/htdocs/samba/CONFER/SeaVal/'
# this directory is shared at http://files.nr.no/samba/CONFER/SeaVal/
save(data_dir,chirps_fn,file = '_data_dir.RData') # just for loading it in the bookdown
bookdown::render_book('index.rmd',
'bookdown::gitbook',
new_session = T)
# We need to copy paste, the output_dir option of render_book does not work, see https://github.com/rstudio/bookdown/issues/804
file.copy(list.files('./_book/',full.names = TRUE), to = output_dir, recursive = TRUE)
### This script renders the SeaVal documentation
# It essentially knits all .rmd files in this folder, starting with index.rmd and then following the naming order (so the file names should start with a number)
### adjust to your setup: ###
setwd('~/pkg/SeaVal/scripts/SeaValDocumentation/bookdown/')
data_dir = '/nr/project/stat/CONFER/Data/validation/example_data/202102/'
chirps_fn = "/nr/project/stat/CONFER/Data/CHIRPS_prec_upscaled.csv"
output_dir = '/nr/common/www/virtual/files.nr.no/htdocs/samba/CONFER/SeaVal/'
# this directory is shared at http://files.nr.no/samba/CONFER/SeaVal/
save(data_dir,chirps_fn,file = '_data_dir.RData') # just for loading it in the bookdown
bookdown::render_book('index.rmd',
'bookdown::gitbook',
new_session = T)
# We need to copy paste, the output_dir option of render_book does not work, see https://github.com/rstudio/bookdown/issues/804
file.copy(list.files('./_book/',full.names = TRUE), to = output_dir, recursive = TRUE)
### This script renders the SeaVal documentation
# It essentially knits all .rmd files in this folder, starting with index.rmd and then following the naming order (so the file names should start with a number)
### adjust to your setup: ###
setwd('~/pkg/SeaVal/scripts/SeaValDocumentation/bookdown/')
data_dir = '/nr/project/stat/CONFER/Data/validation/example_data/202102/'
chirps_fn = "/nr/project/stat/CONFER/Data/CHIRPS_prec_upscaled.csv"
output_dir = '/nr/common/www/virtual/files.nr.no/htdocs/samba/CONFER/SeaVal/'
# this directory is shared at http://files.nr.no/samba/CONFER/SeaVal/
save(data_dir,chirps_fn,file = '_data_dir.RData') # just for loading it in the bookdown
bookdown::render_book('index.rmd',
'bookdown::gitbook',
new_session = T)
# We need to copy paste, the output_dir option of render_book does not work, see https://github.com/rstudio/bookdown/issues/804
file.copy(list.files('./_book/',full.names = TRUE), to = output_dir, recursive = TRUE)
### This script renders the SeaVal documentation
# It essentially knits all .rmd files in this folder, starting with index.rmd and then following the naming order (so the file names should start with a number)
### adjust to your setup: ###
setwd('~/pkg/SeaVal/scripts/SeaValDocumentation/bookdown/')
data_dir = '/nr/project/stat/CONFER/Data/validation/example_data/202102/'
chirps_fn = "/nr/project/stat/CONFER/Data/CHIRPS_prec_upscaled.csv"
output_dir = '/nr/common/www/virtual/files.nr.no/htdocs/samba/CONFER/SeaVal/'
# this directory is shared at http://files.nr.no/samba/CONFER/SeaVal/
save(data_dir,chirps_fn,file = '_data_dir.RData') # just for loading it in the bookdown
bookdown::render_book('index.rmd',
'bookdown::gitbook',
new_session = T)
# We need to copy paste, the output_dir option of render_book does not work, see https://github.com/rstudio/bookdown/issues/804
file.copy(list.files('./_book/',full.names = TRUE), to = output_dir, recursive = TRUE)
### This script renders the SeaVal documentation
# It essentially knits all .rmd files in this folder, starting with index.rmd and then following the naming order (so the file names should start with a number)
### adjust to your setup: ###
setwd('~/pkg/SeaVal/scripts/SeaValDocumentation/bookdown/')
data_dir = '/nr/project/stat/CONFER/Data/validation/example_data/202102/'
chirps_fn = "/nr/project/stat/CONFER/Data/CHIRPS_prec_upscaled.csv"
output_dir = '/nr/common/www/virtual/files.nr.no/htdocs/samba/CONFER/SeaVal/'
# this directory is shared at http://files.nr.no/samba/CONFER/SeaVal/
save(data_dir,chirps_fn,file = '_data_dir.RData') # just for loading it in the bookdown
bookdown::render_book('index.rmd',
'bookdown::gitbook',
new_session = T)
# We need to copy paste, the output_dir option of render_book does not work, see https://github.com/rstudio/bookdown/issues/804
file.copy(list.files('./_book/',full.names = TRUE), to = output_dir, recursive = TRUE)
### This script renders the SeaVal documentation
# It essentially knits all .rmd files in this folder, starting with index.rmd and then following the naming order (so the file names should start with a number)
### adjust to your setup: ###
setwd('~/pkg/SeaVal/scripts/SeaValDocumentation/bookdown/')
data_dir = '/nr/project/stat/CONFER/Data/validation/example_data/202102/'
chirps_fn = "/nr/project/stat/CONFER/Data/CHIRPS_prec_upscaled.csv"
output_dir = '/nr/common/www/virtual/files.nr.no/htdocs/samba/CONFER/SeaVal/'
# this directory is shared at http://files.nr.no/samba/CONFER/SeaVal/
save(data_dir,chirps_fn,file = '_data_dir.RData') # just for loading it in the bookdown
bookdown::render_book('index.rmd',
'bookdown::gitbook',
new_session = T)
# We need to copy paste, the output_dir option of render_book does not work, see https://github.com/rstudio/bookdown/issues/804
file.copy(list.files('./_book/',full.names = TRUE), to = output_dir, recursive = TRUE)
### This script renders the SeaVal documentation
# It essentially knits all .rmd files in this folder, starting with index.rmd and then following the naming order (so the file names should start with a number)
### adjust to your setup: ###
setwd('~/pkg/SeaVal/scripts/SeaValDocumentation/bookdown/')
data_dir = '/nr/project/stat/CONFER/Data/validation/example_data/202102/'
chirps_fn = "/nr/project/stat/CONFER/Data/CHIRPS_prec_upscaled.csv"
output_dir = '/nr/common/www/virtual/files.nr.no/htdocs/samba/CONFER/SeaVal/'
# this directory is shared at http://files.nr.no/samba/CONFER/SeaVal/
save(data_dir,chirps_fn,file = '_data_dir.RData') # just for loading it in the bookdown
bookdown::render_book('index.rmd',
'bookdown::gitbook',
new_session = T)
# We need to copy paste, the output_dir option of render_book does not work, see https://github.com/rstudio/bookdown/issues/804
file.copy(list.files('./_book/',full.names = TRUE), to = output_dir, recursive = TRUE)
### This script renders the SeaVal documentation
# It essentially knits all .rmd files in this folder, starting with index.rmd and then following the naming order (so the file names should start with a number)
### adjust to your setup: ###
setwd('~/pkg/SeaVal/scripts/SeaValDocumentation/bookdown/')
data_dir = '/nr/project/stat/CONFER/Data/validation/example_data/202102/'
chirps_fn = "/nr/project/stat/CONFER/Data/CHIRPS_prec_upscaled.csv"
output_dir = '/nr/common/www/virtual/files.nr.no/htdocs/samba/CONFER/SeaVal/'
# this directory is shared at http://files.nr.no/samba/CONFER/SeaVal/
save(data_dir,chirps_fn,file = '_data_dir.RData') # just for loading it in the bookdown
bookdown::render_book('index.rmd',
'bookdown::gitbook',
new_session = T)
# We need to copy paste, the output_dir option of render_book does not work, see https://github.com/rstudio/bookdown/issues/804
file.copy(list.files('./_book/',full.names = TRUE), to = output_dir, recursive = TRUE)
### This script renders the SeaVal documentation
# It essentially knits all .rmd files in this folder, starting with index.rmd and then following the naming order (so the file names should start with a number)
### adjust to your setup: ###
setwd('~/pkg/SeaVal/scripts/SeaValDocumentation/bookdown/')
data_dir = '/nr/project/stat/CONFER/Data/validation/example_data/202102/'
chirps_fn = "/nr/project/stat/CONFER/Data/CHIRPS_prec_upscaled.csv"
output_dir = '/nr/common/www/virtual/files.nr.no/htdocs/samba/CONFER/SeaVal/'
# this directory is shared at http://files.nr.no/samba/CONFER/SeaVal/
save(data_dir,chirps_fn,file = '_data_dir.RData') # just for loading it in the bookdown
bookdown::render_book('index.rmd',
'bookdown::gitbook',
new_session = T)
# We need to copy paste, the output_dir option of render_book does not work, see https://github.com/rstudio/bookdown/issues/804
file.copy(list.files('./_book/',full.names = TRUE), to = output_dir, recursive = TRUE)
### This script renders the SeaVal documentation
# It essentially knits all .rmd files in this folder, starting with index.rmd and then following the naming order (so the file names should start with a number)
### adjust to your setup: ###
setwd('~/pkg/SeaVal/scripts/SeaValDocumentation/bookdown/')
data_dir = '/nr/project/stat/CONFER/Data/validation/example_data/202102/'
chirps_fn = "/nr/project/stat/CONFER/Data/CHIRPS_prec_upscaled.csv"
output_dir = '/nr/common/www/virtual/files.nr.no/htdocs/samba/CONFER/SeaVal/'
# this directory is shared at http://files.nr.no/samba/CONFER/SeaVal/
save(data_dir,chirps_fn,file = '_data_dir.RData') # just for loading it in the bookdown
bookdown::render_book('index.rmd',
'bookdown::gitbook',
new_session = T)
# We need to copy paste, the output_dir option of render_book does not work, see https://github.com/rstudio/bookdown/issues/804
file.copy(list.files('./_book/',full.names = TRUE), to = output_dir, recursive = TRUE)
### This script renders the SeaVal documentation
# It essentially knits all .rmd files in this folder, starting with index.rmd and then following the naming order (so the file names should start with a number)
### adjust to your setup: ###
setwd('~/pkg/SeaVal/scripts/SeaValDocumentation/bookdown/')
data_dir = '/nr/project/stat/CONFER/Data/validation/example_data/202102/'
chirps_fn = "/nr/project/stat/CONFER/Data/CHIRPS_prec_upscaled.csv"
output_dir = '/nr/common/www/virtual/files.nr.no/htdocs/samba/CONFER/SeaVal/'
# this directory is shared at http://files.nr.no/samba/CONFER/SeaVal/
save(data_dir,chirps_fn,file = '_data_dir.RData') # just for loading it in the bookdown
bookdown::render_book('index.rmd',
'bookdown::gitbook',
new_session = T)
# We need to copy paste, the output_dir option of render_book does not work, see https://github.com/rstudio/bookdown/issues/804
file.copy(list.files('./_book/',full.names = TRUE), to = output_dir, recursive = TRUE)
### This script renders the SeaVal documentation
# It essentially knits all .rmd files in this folder, starting with index.rmd and then following the naming order (so the file names should start with a number)
### adjust to your setup: ###
setwd('~/pkg/SeaVal/scripts/SeaValDocumentation/bookdown/')
data_dir = '/nr/project/stat/CONFER/Data/validation/example_data/202102/'
chirps_fn = "/nr/project/stat/CONFER/Data/CHIRPS_prec_upscaled.csv"
output_dir = '/nr/common/www/virtual/files.nr.no/htdocs/samba/CONFER/SeaVal/'
# this directory is shared at http://files.nr.no/samba/CONFER/SeaVal/
save(data_dir,chirps_fn,file = '_data_dir.RData') # just for loading it in the bookdown
bookdown::render_book('index.rmd',
'bookdown::gitbook',
new_session = T)
# We need to copy paste, the output_dir option of render_book does not work, see https://github.com/rstudio/bookdown/issues/804
file.copy(list.files('./_book/',full.names = TRUE), to = output_dir, recursive = TRUE)
### This script renders the SeaVal documentation
# It essentially knits all .rmd files in this folder, starting with index.rmd and then following the naming order (so the file names should start with a number)
### adjust to your setup: ###
setwd('~/pkg/SeaVal/scripts/SeaValDocumentation/bookdown/')
data_dir = '/nr/project/stat/CONFER/Data/validation/example_data/202102/'
chirps_fn = "/nr/project/stat/CONFER/Data/CHIRPS_prec_upscaled.csv"
output_dir = '/nr/common/www/virtual/files.nr.no/htdocs/samba/CONFER/SeaVal/'
# this directory is shared at http://files.nr.no/samba/CONFER/SeaVal/
save(data_dir,chirps_fn,file = '_data_dir.RData') # just for loading it in the bookdown
bookdown::render_book('index.rmd',
'bookdown::gitbook',
new_session = T)
# We need to copy paste, the output_dir option of render_book does not work, see https://github.com/rstudio/bookdown/issues/804
file.copy(list.files('./_book/',full.names = TRUE), to = output_dir, recursive = TRUE)
### This script renders the SeaVal documentation
# It essentially knits all .rmd files in this folder, starting with index.rmd and then following the naming order (so the file names should start with a number)
### adjust to your setup: ###
setwd('~/pkg/SeaVal/scripts/SeaValDocumentation/bookdown/')
data_dir = '/nr/project/stat/CONFER/Data/validation/example_data/202102/'
chirps_fn = "/nr/project/stat/CONFER/Data/CHIRPS_prec_upscaled.csv"
output_dir = '/nr/common/www/virtual/files.nr.no/htdocs/samba/CONFER/SeaVal/'
# this directory is shared at http://files.nr.no/samba/CONFER/SeaVal/
save(data_dir,chirps_fn,file = '_data_dir.RData') # just for loading it in the bookdown
bookdown::render_book('index.rmd',
'bookdown::gitbook',
new_session = T)
# We need to copy paste, the output_dir option of render_book does not work, see https://github.com/rstudio/bookdown/issues/804
file.copy(list.files('./_book/',full.names = TRUE), to = output_dir, recursive = TRUE)
### This script renders the SeaVal documentation
# It essentially knits all .rmd files in this folder, starting with index.rmd and then following the naming order (so the file names should start with a number)
### adjust to your setup: ###
setwd('~/pkg/SeaVal/scripts/SeaValDocumentation/bookdown/')
data_dir = '/nr/project/stat/CONFER/Data/validation/example_data/202102/'
chirps_fn = "/nr/project/stat/CONFER/Data/CHIRPS_prec_upscaled.csv"
output_dir = '/nr/common/www/virtual/files.nr.no/htdocs/samba/CONFER/SeaVal/'
# this directory is shared at http://files.nr.no/samba/CONFER/SeaVal/
save(data_dir,chirps_fn,file = '_data_dir.RData') # just for loading it in the bookdown
bookdown::render_book('index.rmd',
'bookdown::gitbook',
new_session = T)
# We need to copy paste, the output_dir option of render_book does not work, see https://github.com/rstudio/bookdown/issues/804
file.copy(list.files('./_book/',full.names = TRUE), to = output_dir, recursive = TRUE)
### This script renders the SeaVal documentation
# It essentially knits all .rmd files in this folder, starting with index.rmd and then following the naming order (so the file names should start with a number)
### adjust to your setup: ###
setwd('~/pkg/SeaVal/scripts/SeaValDocumentation/bookdown/')
data_dir = '/nr/project/stat/CONFER/Data/validation/example_data/202102/'
chirps_fn = "/nr/project/stat/CONFER/Data/CHIRPS_prec_upscaled.csv"
output_dir = '/nr/common/www/virtual/files.nr.no/htdocs/samba/CONFER/SeaVal/'
# this directory is shared at http://files.nr.no/samba/CONFER/SeaVal/
save(data_dir,chirps_fn,file = '_data_dir.RData') # just for loading it in the bookdown
bookdown::render_book('index.rmd',
'bookdown::gitbook',
new_session = T)
# We need to copy paste, the output_dir option of render_book does not work, see https://github.com/rstudio/bookdown/issues/804
file.copy(list.files('./_book/',full.names = TRUE), to = output_dir, recursive = TRUE)
### This script renders the SeaVal documentation
# It essentially knits all .rmd files in this folder, starting with index.rmd and then following the naming order (so the file names should start with a number)
### adjust to your setup: ###
setwd('~/pkg/SeaVal/scripts/SeaValDocumentation/bookdown/')
data_dir = '/nr/project/stat/CONFER/Data/validation/example_data/202102/'
chirps_fn = "/nr/project/stat/CONFER/Data/CHIRPS_prec_upscaled.csv"
output_dir = '/nr/common/www/virtual/files.nr.no/htdocs/samba/CONFER/SeaVal/'
# this directory is shared at http://files.nr.no/samba/CONFER/SeaVal/
save(data_dir,chirps_fn,file = '_data_dir.RData') # just for loading it in the bookdown
bookdown::render_book('index.rmd',
'bookdown::gitbook',
new_session = T)
# We need to copy paste, the output_dir option of render_book does not work, see https://github.com/rstudio/bookdown/issues/804
file.copy(list.files('./_book/',full.names = TRUE), to = output_dir, recursive = TRUE)
q()
